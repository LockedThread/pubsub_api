[{"C:\\Users\\Abrahan\\Downloads\\pubsub_api\\frontend\\src\\index.js":"1","C:\\Users\\Abrahan\\Downloads\\pubsub_api\\frontend\\src\\App.js":"2","C:\\Users\\Abrahan\\Downloads\\pubsub_api\\frontend\\src\\Components\\SubCard.js":"3","C:\\Users\\Abrahan\\Downloads\\pubsub_api\\frontend\\src\\Components\\Email.js":"4"},{"size":153,"mtime":1607906144962,"results":"5","hashOfConfig":"6"},{"size":593,"mtime":1607996264450,"results":"7","hashOfConfig":"6"},{"size":2565,"mtime":1607995681505,"results":"8","hashOfConfig":"6"},{"size":1995,"mtime":1608005185569,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"11aa6kp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"12"},"C:\\Users\\Abrahan\\Downloads\\pubsub_api\\frontend\\src\\index.js",[],["23","24"],"C:\\Users\\Abrahan\\Downloads\\pubsub_api\\frontend\\src\\App.js",["25"],"import './App.css';\nimport SubCard from \"./Components/SubCard.js\"\nimport Carousel from 'react-elastic-carousel';\nimport React, { Component } from 'react';\nimport Email from \"./Components/Email.js\";\nfunction App() {\n  return (\n    <div className=\"App\">\n    <p>Current Subs</p>\n    <Carousel>\n    <SubCard position={0}></SubCard>\n    <SubCard position={1}></SubCard>\n    <SubCard position={2}></SubCard>\n    <SubCard position={3}></SubCard>\n    <SubCard position={4}></SubCard>\n    <SubCard position={5}></SubCard>\n    </Carousel>\n    <Email></Email>\n    \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Abrahan\\Downloads\\pubsub_api\\frontend\\src\\Components\\SubCard.js",["26","27","28"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nclass Sub{\r\n  constructor(){\r\n    this.name = [];\r\n    this.image = [];\r\n    this.last_on_sale = [];\r\n    this.price = [];\r\n    this.on_sale = [];\r\n    this.status = \"\";\r\n    this.buttontype = \"\";\r\n    this.original_name = [];\r\n  }\r\n}\r\nModal.setAppElement(\"#root\")\r\nfunction SubCard({position}) {\r\n    let[subData, setSub] = useState([])\r\n    const [modalIsOpen, setModalIsOpen] = useState(false)\r\n    let sub = new Sub();\r\n    useEffect(()=>{\r\n        fetch('http://localhost:5000/onsale/')\r\n        .then ((response) => response.json())\r\n        .then((data) => setSub(data))\r\n        .catch((error) => console.log(error))\r\n      }, [])\r\n    sub.name =  subData.map(pubsub => pubsub.name.replace(\"-\", \" \"))\r\n    sub.original_name = subData.map(pubsub => pubsub.name)\r\n    sub.image = subData.map(pubsub => pubsub.image)\r\n    sub.on_sale = subData.map(pubsub => pubsub.on_sale)\r\n    sub.price = subData.map(pubsub => pubsub.price)\r\n    sub.last_on_sale = subData.map(pubsub => pubsub.last_on_sale)\r\n    if(sub.on_sale[position] === \"False\"){\r\n      sub.status = \"Not on sale\"\r\n    }else if(sub.on_sale[position] === \"True\"){\r\n      sub.status = \"Sale\"\r\n      sub.buttontype = \"danger\"\r\n    }\r\n  return (\r\n          <div>\r\n            <button onClick={() => setModalIsOpen(true)}>\r\n            <img src={sub.image[position]}></img>\r\n            <p>\r\n            {\r\n              sub.name[position]\r\n            }\r\n            </p>\r\n            <button varient = {sub.buttontype}>{sub.status}</button>\r\n            </button>\r\n            <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}\r\n            style={\r\n              {\r\n                overlay: {\r\n                  backgroundColor: \"gray\"\r\n                }\r\n              }\r\n            }>\r\n            <center>\r\n            <img src={sub.image[position]}></img>\r\n            <p>Sub name: {sub.name[position]}</p>\r\n            <p>Last time on sale: {sub.last_on_sale[position]}</p>\r\n            <p>Price during sale: {sub.price[position]}</p>\r\n            <p>Status: {sub.status}</p>\r\n            <p>How to access {sub.name[position]} json:</p>\r\n            <p>https://pubsub-api.dev/subs/?name={sub.original_name[position]}</p>\r\n            <button onClick={() => setModalIsOpen(false)}>Close</button>\r\n            </center>\r\n            </Modal>\r\n          </div>\r\n  );\r\n}\r\n\r\nexport default SubCard;\r\n",["29","30"],"C:\\Users\\Abrahan\\Downloads\\pubsub_api\\frontend\\src\\Components\\Email.js",["31"],"import React, {Component} from \"react\";\r\nimport Modal from \"react-modal\";\r\nclass Email extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      name: \"\",\r\n    };\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { email, name } = this.state;\r\n\r\n    const info = {\r\n      email,\r\n      name,\r\n    };\r\n\r\n    fetch(\"http://127.0.0.1:5000/email/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(info),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => console.log(json));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"newsletter-container\">\r\n        <br />\r\n        <h1>\r\n          Join our newsletter!\r\n        </h1>\r\n        <h4>\r\n          Get notified whenever there's a pubsub sale!\r\n        </h4>\r\n          <center>\r\n          <form className=\"form-group\" onSubmit={this.handleSubmit}>\r\n            <div style={{ width: \"80%\" }} >\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <br />\r\n            <div style={{ width: \"80%\" }} >\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                placeholder=\"First Name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"sub-btn-container\">\r\n              <button className=\"sub-btn \" type=\"submit\">\r\n                <h4>\r\n                Subscribe\r\n                </h4>\r\n              </button>\r\n            </div>\r\n          </form>\r\n       </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Email;\r\n\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":4,"column":17,"nodeType":"38","messageId":"39","endLine":4,"endColumn":26},{"ruleId":"36","severity":1,"message":"40","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":14},{"ruleId":"41","severity":1,"message":"42","line":43,"column":13,"nodeType":"43","endLine":43,"endColumn":44},{"ruleId":"41","severity":1,"message":"42","line":60,"column":13,"nodeType":"43","endLine":60,"endColumn":44},{"ruleId":"32","replacedBy":"44"},{"ruleId":"34","replacedBy":"45"},{"ruleId":"36","severity":1,"message":"46","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":13},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["47"],["48"],"'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]